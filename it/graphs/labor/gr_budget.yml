---
schema: EconSchema
version: 1
params:
- name: w
  value: '10'
  min: '5'
  max: '15'
  round: '0.05'
- name: M
  value: '50'
  min: '0'
  max: '100'
  round: '10'
- name: L
  value: 6
  max: 14
  round: 1
- name: p
  value: 1
  max: 1.5
  min: 0.5
  round: 0.05
calcs:
  wealth: 14*params.w + params.M
  consumptionEndowment: params.M / params.p
  leisure: (14 - params.L)
  consumption: (params.M + params.w*params.L) / params.p
  maxconsumption: (params.M + params.w*14) / params.p
  wageIncome: params.w*params.L
  wageconsumption: (params.w*params.L)/params.p

aspectRatio: 1.5

layout:
  type: OneGraphPlusSidebar
  def:
    graph:
      xAxis:
        orient: bottom
        min: 0
        max: 16
        ticks: 0
      yAxis:
        orient: left
        min: 0
        max: 300
        ticks: 0
      objects:


      - Label:
            coordinates: [16, 0]
            text: "` \\\\text{Tempo libero (ore)} `"
            yPixelOffset: 0
            position: l

      - Label:
            coordinates: [0, 300]
            text: "` \\\\text{Consumo (kg)}  `"
            xPixelOffset: -5


# budget line
      - Line:
          yIntercept: calcs.maxconsumption
          max: 14
          slope: -params.w / params.p
          color: Blue
          strokeWidth: 2

      - Point:
          coordinates: [calcs.leisure, calcs.consumption]
          droplines:
            vertical: calcs.leisure
            horizontal: "`(M_0+WL)/P = ${ calcs.consumption.toFixed(2) } `"
          color: Blue
          drag:
            - directions: x
              param: L
              expression: params.L - drag.dx
          show: params.L > 0 && params.L < 14

      - Point:
          coordinates: [0, calcs.maxconsumption]
          droplines:
            vertical: 0
            horizontal: "`(M_0+WT)/P = ${ calcs.maxconsumption.toFixed(2) } `"
          color: Black
          r: 0

      - type: EconBundle
        def:
          name: endowmentBundle
          coordinates:
          - 14
          - calcs.consumptionEndowment
          droplines:
            vertical: "`T=14`"
            horizontal: "`M_0/P = ${ calcs.consumptionEndowment.toFixed(2) } `"
          color: Black
          label:
            text: \text{Situazione iniziale}

      - type: Segment
        def:
          a:
          - 14
          - params.M*0.5
          b:
          - calcs.leisure
          - params.M*0.5
#          startArrow: true
          endArrow: true
          color: Red
          strokeWidth: 1
          label:
            text: "`\\\\text{Lavoro $L=${params.L}$}`"
            location: 0.5
            yPixelOffset: 0

      - type: Segment
        def:
          a:
          - 0
          - params.M*0.5
          b:
          - calcs.leisure
          - params.M*0.5
#          startArrow: true
          endArrow: true
          color: Blue
          strokeWidth: 1
          label:
            text: "`\\\\text{Tempo libero $N=${14-params.L}$}`"
            location: 0.5
            yPixelOffset: 0

      - type: Segment
        def:
          a:
          - calcs.leisure * 0.5
          - calcs.consumptionEndowment
          b:
          - calcs.leisure * 0.5
          - calcs.consumption
#          startArrow: true
          endArrow: true
          show: params.L > 0
          color: Darkgreen
          strokeWidth: 1
          label:
            text: "`\\\\text{Consumo aggiuntivo}=${calcs.wageconsumption.toFixed(2)}`"
            location: 0.5
            xPixelOffset: 0
            align: center

    sidebar:
      controls:

      - title: Vincolo di bilancio del consumatore / lavoratore
#        description: The budget line for a worker who can choose how many hours to work at a constant wage

        sliders:
        - param: w
          label: W
        - param: p
          label: P
        - param: M
          label: M_0
        - param: L
          label: L

        divs:
        - html: "` Dato il prezzo del bene di consumo ($P = ${params.p.toFixed(2)}$), il reddito non da lavoro
                  ($M_0 = ${params.M}$ euro) garantisce un livello di consumo
                  pari a $M_0/P=${calcs.consumptionEndowment.toFixed(2)}$ unità. 
                  Lavorando $L = ${params.L}$ ore ad un salario orario di $W = ${params.w.toFixed(2)}$ euro, 
                   si ottiene un reddito da lavoro pari 
                   a $WL = ${calcs.wageIncome.toFixed(2)}$
                   euro e quindi un consumo aggiuntivo di $WL/P = ${calcs.wageconsumption.toFixed(2)}$
                   unità.   `"
